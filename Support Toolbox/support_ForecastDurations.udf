IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[support_ForecastDurations]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[support_ForecastDurations]
GO

SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO

CREATE FUNCTION [dbo].[support_ForecastDurations] (
	  @daysBack int = 0
)	
RETURNS @table TABLE
(
	ForecastId int
	,ForecastStartTime datetime
	,ForecastEndTime datetime
	,FinalCount int
	,Duration nvarchar(20)
)

AS
BEGIN

	;with cteForecastStartTimes
	as (
		select row_number() over( order by SLTimeStamp desc ) as [ForecastId]
			, sltimestamp as [ForecastStartTime]
		from syncSystemLog
		where LogMessage = 'ForecastEngine: Forecasting start'
		and SLTimeStamp > dateadd(d, -1*@daysBack, convert(varchar, getdate(),1))
	)
	, cteForecastEndTimes
	as (
		select row_number() over( order by SLTimeStamp desc ) as [ForecastId]
			, sltimestamp as [ForecastEndTime]
		from syncSystemLog
		where LogMessage = 'ForecastEngine: Forecasting start'
		and SLTimeStamp > dateadd(d, -1*@daysBack, convert(varchar, getdate(),1))
	)
	, cteForecastFinalCount
	as (
		select row_number() over( order by SLTimeStamp desc ) as [ForecastId]
			, replace(logmessage, 'ForecastEngine: Final count: ', '') as [ForecastFinalCount]
		from syncSystemLog
		where LogMessage like 'ForecastEngine: Final count: %'
		and SLTimeStamp > dateadd(d, -1*@daysBack, convert(varchar, getdate(),1))
	) 
	insert into @table
	select s.ForecastId, s.ForecastStartTime, e.ForecastEndTime, c.ForecastFinalCount
		, cast( DATEDIFF(	SECOND, s.ForecastStartTime, e.ForecastEndTime) / 3600 as varchar)
		+ 'h ' + 
		+ right('00' + cast( DATEDIFF(	SECOND, s.ForecastStartTime, e.ForecastEndTime) % 3600 / 60 as varchar), 2)
		+ 'm ' + 
		+ right('00' + cast( DATEDIFF(	SECOND, s.ForecastStartTime, e.ForecastEndTime) % 60 as varchar), 2)
		+ 's ' AS [Duration]
	from cteForecastStartTimes s
	left join cteForecastEndTimes e
		on s.ForecastId = e.ForecastId	
	left join cteForecastFinalCount c
		on s.ForecastId = c.ForecastId

	RETURN
END
GO	